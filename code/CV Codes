tune.out <- tune(svm , yâˆ¼., data =dat [train ,], kernel = "radial", 
ranges = list( cost=c (0.1 ,1 ,10 ,100 ,1000) , gamma =c(0.5 ,1 ,2 ,3 ,4) ))
summary ( tune.out ) 


bag.boston <- randomForest(medvâˆ¼., data=Boston , subset =train , mtry =13, importance = TRUE) 
bag.boston 
yhat.bag = predict (bag.boston , newdata =Boston [-train ,]) 
plot( yhat.bag , boston.test)
abline (0 ,1) 
mean (( yhat.bag - boston.test)^2) 

#bagged tree
bag.boston = randomForest(medvâˆ¼., data=Boston , subset =train , mtry =13, ntree =25)
yhat.bag = predict (bag . boston , newdata =Boston [-train ,]) 
mean (( yhat.bag - boston . test)^2) 

#rf
rf.boston = randomForest( medv~.,data =Boston , subset =train , mtry =6, importance = TRUE)
yhat.rf = predict (rf.boston , newdata = Boston [- train ,])
mean (( yhat.rf - boston .test )^2)

importance (rf. boston ) 

#cvrf
cv. carseats =cv.tree( tree.carseats ,FUN =prune.misclass, K = 5 ) 
names (cv. carseats ) 
cv. carseats

par ( mfrow =c(1 ,2) )
plot(cv. carseats$size ,cv. carseats$dev ,type ="b")
plot(cv. carseats$k ,cv. carseats$dev ,type ="b")

prune . carseats =prune . misclass (tree .carseats ,best =9)
plot( prune . carseats )
text( prune . carseats , pretty =0) 


tree. pred= predict (prune .carseats , Carseats .test ,type =" class ")
table (tree.pred , High.test )

#SVM CV

# IMPORTANT FOR 5 fold!
svmfit =svm (yâˆ¼., data=dat , kernel =" linear ", cost =10, scale = FALSE 
library(caret)
tc <- tune.control(cross = 5)
prioir_svm <- tune.svm(train, y = trainY, cost = Cs, gamma = gammas,
                       tunecontrol = tc)

tune.out =tune(svm, y~., data=dat , kernel =" linear ", ranges = list( cost=c(0.001 , 0.01 , 0.1, 1 ,5 ,10 ,100) ))
summary ( tune.out )
bestmod = tune. out$best . model
summary ( bestmod ) 
ypred = predict ( bestmod , testdat )
table ( predict =ypred , truth = testdat$y )


#alternatively
ctrl <- trainControl(method = "cv", savePred=T, classProb=T)
mod <- train(Species~., data=iris, method = "svmLinear", trControl = ctrl)
head(mod$pred)

